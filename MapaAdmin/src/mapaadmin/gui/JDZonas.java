/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * JDZonas.java
 *
 * Created on 4/08/2009, 09:22:11 PM
 */

package mapaadmin.gui;

import java.util.ArrayList;
import java.util.List;
import javax.persistence.RollbackException;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import mapaadmin.MapaAdminApp;
import mapaadmin.dao.ZonaInfo;
import org.jdesktop.application.Action;
import org.jdesktop.application.Task;
import org.jdesktop.beansbinding.AbstractBindingListener;
import org.jdesktop.beansbinding.Binding;
import org.jdesktop.beansbinding.PropertyStateEvent;

/**
 *
 * @author techno
 */
public class JDZonas extends javax.swing.JDialog {
    private static final long serialVersionUID = -3088089796083484598L;
   
    
    /** Creates new form JDZonas */
    public JDZonas(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

        tblZonas.getSelectionModel().addListSelectionListener(
                new ListSelectionListener(){
            @Override
            public void valueChanged(ListSelectionEvent e){
                firePropertyChange("recordSelected",!isRecordSelected(),isRecordSelected());
            }
        });

        //tracking changes to save
        bindingGroup.addBindingListener(new AbstractBindingListener(){
            @Override
            public void targetChanged(Binding binding, PropertyStateEvent event){
                setSaveNeeded(true);
            }
        });

        ucentral2PUEntityManager.getTransaction().begin();

    }

    protected boolean zonaConfirmed;

    /**
     * Get the value of zonaConfirmed
     *
     * @return the value of zonaConfirmed
     */
    public boolean isZonaConfirmed() {
        return zonaConfirmed;
    }

    /**
     * Set the value of zonaConfirmed
     *
     * @param zonaConfirmed new value of zonaConfirmed
     */
    public void setZonaConfirmed(boolean zonaConfirmed) {
        this.zonaConfirmed = zonaConfirmed;
    }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        ucentral2PUEntityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("ucentral2PU").createEntityManager();
        sedeInfoQuery = java.beans.Beans.isDesignTime() ? null : ucentral2PUEntityManager.createQuery("SELECT s FROM SedeInfo s");
        sedeInfoList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(sedeInfoQuery.getResultList());
        sedeListCellRenderer1 = new mapaadmin.tools.SedeListCellRenderer();
        zonaInfoQuery = java.beans.Beans.isDesignTime() ? null : ucentral2PUEntityManager.createQuery("SELECT z FROM ZonaInfo z");
        zonaInfoList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(zonaInfoQuery.getResultList());
        tipoZonaQuery = java.beans.Beans.isDesignTime() ? null : ucentral2PUEntityManager.createQuery("SELECT t FROM TipoZona t");
        tipoZonaList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(tipoZonaQuery.getResultList());
        tipoZonaListCellRenderer1 = new mapaadmin.tools.TipoZonaListCellRenderer();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblZonas = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jtfIdZona = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jtfNombre = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jcbSede = new javax.swing.JComboBox();
        jbtnCancelar = new javax.swing.JButton();
        jbtnGuardar = new javax.swing.JButton();
        jbtnBorrar = new javax.swing.JButton();
        jbtnNuevo = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(mapaadmin.MapaAdminApp.class).getContext().getResourceMap(JDZonas.class);
        sedeListCellRenderer1.setText(resourceMap.getString("sedeListCellRenderer1.text")); // NOI18N
        sedeListCellRenderer1.setName("sedeListCellRenderer1"); // NOI18N

        tipoZonaListCellRenderer1.setText(resourceMap.getString("tipoZonaListCellRenderer1.text")); // NOI18N
        tipoZonaListCellRenderer1.setName("tipoZonaListCellRenderer1"); // NOI18N

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setName("Form"); // NOI18N
        setResizable(false);

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        tblZonas.setName("tblZonas"); // NOI18N

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, zonaInfoList, tblZonas);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${idZona}"));
        columnBinding.setColumnName("Id Zona");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${nomZona}"));
        columnBinding.setColumnName("Nom Zona");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${sedeZona.nomSede}"));
        columnBinding.setColumnName("Sede Zona.nom Sede");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${tipo.nomTipoZona}"));
        columnBinding.setColumnName("Tipo.nom Tipo Zona");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        jScrollPane1.setViewportView(tblZonas);
        tblZonas.getColumnModel().getColumn(0).setHeaderValue(resourceMap.getString("tblZonas.columnModel.title0")); // NOI18N
        tblZonas.getColumnModel().getColumn(1).setHeaderValue(resourceMap.getString("tblZonas.columnModel.title1")); // NOI18N
        tblZonas.getColumnModel().getColumn(2).setHeaderValue(resourceMap.getString("tblZonas.columnModel.title2")); // NOI18N
        tblZonas.getColumnModel().getColumn(3).setHeaderValue(resourceMap.getString("tblZonas.columnModel.title3")); // NOI18N

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        jtfIdZona.setName("jtfIdZona"); // NOI18N

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, tblZonas, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.idZona}"), jtfIdZona, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        jtfNombre.setName("jtfNombre"); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, tblZonas, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.nomZona}"), jtfNombre, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        jcbSede.setName("jcbSede"); // NOI18N
        jcbSede.setRenderer(sedeListCellRenderer1);

        org.jdesktop.swingbinding.JComboBoxBinding jComboBoxBinding = org.jdesktop.swingbinding.SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, sedeInfoList, jcbSede);
        bindingGroup.addBinding(jComboBoxBinding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, tblZonas, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.sedeZona}"), jcbSede, org.jdesktop.beansbinding.BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        jbtnCancelar.setText(resourceMap.getString("jbtnCancelar.text")); // NOI18N
        jbtnCancelar.setName("jbtnCancelar"); // NOI18N
        jbtnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarZona(evt);
            }
        });

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(mapaadmin.MapaAdminApp.class).getContext().getActionMap(JDZonas.class, this);
        jbtnGuardar.setAction(actionMap.get("save")); // NOI18N
        jbtnGuardar.setText(resourceMap.getString("jbtnGuardar.text")); // NOI18N
        jbtnGuardar.setName("jbtnGuardar"); // NOI18N

        jbtnBorrar.setAction(actionMap.get("deleteRecord")); // NOI18N
        jbtnBorrar.setIcon(resourceMap.getIcon("jbtnBorrar.icon")); // NOI18N
        jbtnBorrar.setText(resourceMap.getString("jbtnBorrar.text")); // NOI18N
        jbtnBorrar.setName("jbtnBorrar"); // NOI18N

        jbtnNuevo.setAction(actionMap.get("newRecord")); // NOI18N
        jbtnNuevo.setIcon(resourceMap.getIcon("jbtnNuevo.icon")); // NOI18N
        jbtnNuevo.setText(resourceMap.getString("jbtnNuevo.text")); // NOI18N
        jbtnNuevo.setName("jbtnNuevo"); // NOI18N

        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N

        jComboBox1.setName("jComboBox1"); // NOI18N
        jComboBox1.setRenderer(tipoZonaListCellRenderer1);

        jComboBoxBinding = org.jdesktop.swingbinding.SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, tipoZonaList, jComboBox1);
        bindingGroup.addBinding(jComboBoxBinding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, tblZonas, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.tipo}"), jComboBox1, org.jdesktop.beansbinding.BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 390, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtfNombre, javax.swing.GroupLayout.DEFAULT_SIZE, 345, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jbtnNuevo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbtnBorrar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbtnGuardar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jbtnCancelar))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jtfIdZona, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(jcbSede, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jtfIdZona, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbSede, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jtfNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jbtnCancelar)
                        .addComponent(jbtnGuardar)
                        .addComponent(jbtnBorrar))
                    .addComponent(jbtnNuevo))
                .addGap(31, 31, 31))
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelarZona(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarZona
        setZonaConfirmed(true);
        setVisible(false);
    }//GEN-LAST:event_cancelarZona

    protected boolean saveNeeded;

    /**
     * Get the value of saveNeeded
     *
     * @return the value of saveNeeded
     */
    public boolean isSaveNeeded() {
        return saveNeeded;
    }

    /**
     * Set the value of saveNeeded
     *
     * @param saveNeeded new value of saveNeeded
     */
    public void setSaveNeeded(boolean saveNeeded) {
        if (saveNeeded != this.saveNeeded) {
            this.saveNeeded = saveNeeded;
            firePropertyChange("saveNeeded", !saveNeeded, saveNeeded);
        }
    }

    protected boolean recordSelected;

    /**
     * Get the value of recordSelected
     *
     * @return the value of recordSelected
     */
    public boolean isRecordSelected() {
        return tblZonas.getSelectedRow() != -1;
    }

    
    @Action
    public void newRecord() {
        ZonaInfo ZI = new ZonaInfo();
        ucentral2PUEntityManager.persist(ZI);
        zonaInfoList.add(ZI);
        int row = tblZonas.getRowCount() -1;
        tblZonas.setRowSelectionInterval(row,row);
        tblZonas.scrollRectToVisible(tblZonas.getCellRect(row, 0, true));
        setSaveNeeded(true);
    }

    @Action(enabledProperty = "recordSelected")
    public void deleteRecord() {
        int n = JOptionPane.showConfirmDialog(null, "Borrar el registro permanentemente?", "Alerta!",
                JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE, null);
        if (n == JOptionPane.YES_OPTION) {
        int[] selected = tblZonas.getSelectedRows();
        List<ZonaInfo> toRemove = new ArrayList<ZonaInfo>(selected.length);
        for(int idx = 0;idx < selected.length;idx++){
            ZonaInfo zi = zonaInfoList.get(tblZonas.convertRowIndexToModel(selected[idx]));
            toRemove.add(zi);
            ucentral2PUEntityManager.remove(zi);
        }
        zonaInfoList.removeAll(toRemove);
        setSaveNeeded(true);
        save().run();
        }else{
            refresh().run();
        }
    }

    @Action(enabledProperty = "saveNeeded")
    public Task save() {
        return new SaveTask(mapaadmin.MapaAdminApp.getApplication());
    }

    private class SaveTask extends Task{
        SaveTask(org.jdesktop.application.Application app){
            super(app);
        }

        @Override
        protected Object doInBackground(){
            try{
                ucentral2PUEntityManager.getTransaction().commit();
                ucentral2PUEntityManager.getTransaction().begin();
            }catch(RollbackException rex){
                rex.printStackTrace();
                ucentral2PUEntityManager.getTransaction().begin();
                List<ZonaInfo> merged = new ArrayList<ZonaInfo>(zonaInfoList.size());
                for(ZonaInfo Z : zonaInfoList){
                    merged.add(ucentral2PUEntityManager.merge(Z));
                }
                zonaInfoList.clear();
                zonaInfoList.addAll(merged);
            }
            return null;
        }

        @Override
        protected void finished(){
            setSaveNeeded(false);
        }
    }

    @Action
    public Task refresh() {
        return new RefreshTask(MapaAdminApp.getApplication());
    }

    private class RefreshTask extends Task {

        RefreshTask(org.jdesktop.application.Application app) {
            super(app);
        }

        @SuppressWarnings("unchecked")
        @Override
        protected Object doInBackground() {
            try {
                ucentral2PUEntityManager.getTransaction().rollback();
                ucentral2PUEntityManager.getTransaction().begin();
                java.util.Collection data = zonaInfoQuery.getResultList();
                for (Object entity : data) {
                    ucentral2PUEntityManager.refresh(entity);
                }
                zonaInfoList.clear();
                zonaInfoList.addAll(data);
            } catch (RollbackException ignore) {
            }
            return null;
        }

        @Override
        protected void finished() {
            setSaveNeeded(false);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbtnBorrar;
    private javax.swing.JButton jbtnCancelar;
    private javax.swing.JButton jbtnGuardar;
    private javax.swing.JButton jbtnNuevo;
    private javax.swing.JComboBox jcbSede;
    private javax.swing.JTextField jtfIdZona;
    private javax.swing.JTextField jtfNombre;
    private java.util.List<mapaadmin.dao.SedeInfo> sedeInfoList;
    private javax.persistence.Query sedeInfoQuery;
    private mapaadmin.tools.SedeListCellRenderer sedeListCellRenderer1;
    private javax.swing.JTable tblZonas;
    private java.util.List<mapaadmin.dao.TipoZona> tipoZonaList;
    private mapaadmin.tools.TipoZonaListCellRenderer tipoZonaListCellRenderer1;
    private javax.persistence.Query tipoZonaQuery;
    private javax.persistence.EntityManager ucentral2PUEntityManager;
    private java.util.List<mapaadmin.dao.ZonaInfo> zonaInfoList;
    private javax.persistence.Query zonaInfoQuery;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

}
